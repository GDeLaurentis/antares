name: CI Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  CI-Test:

    strategy:
      matrix:
        os: [self-hosted]  # ubuntu-latest, macos-latest, windows-latest
        python-version: ['3.9', '3.10', '3.11', '3.12']

    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Checkout this Repo
      uses: actions/checkout@v4
      with:
        path: antares

    - name: Checkout another Repo (pyadic)
      uses: actions/checkout@v4
      with:
        repository: GDeLaurentis/pyadic
        token: ${{ secrets.GitHubActions_PAT }}
        path: pyadic

    - name: Checkout another Repo (syngular)
      uses: actions/checkout@v4
      with:
        repository: GDeLaurentis/syngular
        token: ${{ secrets.GitHubActions_PAT }}
        path: syngular

    - name: Checkout another Repo (lips)
      uses: actions/checkout@v4
      with:
        repository: GDeLaurentis/lips-dev
        token: ${{ secrets.GitHubActions_PAT }}
        path: lips

    - name: Checkout another private Repo (linac-dev)
      uses: actions/checkout@v4
      with:
        repository: GDeLaurentis/linac-dev
        token: ${{ secrets.GitHubActions_PAT }}
        path: linac
        ref: feature-vector-spaces

    # Already installed in docker container  -  is there a better solution to this?
    # - name: Install singular
      # run: |
        # apt-get update
        # apt-get install singular

    - name: Make CUDA discoverable
      run: |
         export PATH="/usr/local/cuda-12.2/bin:${PATH}"
         export LD_LIBRARY_PATH="/usr/local/cuda-12.2/lib64:${LD_LIBRARY_PATH}"
         echo "$PATH" && echo "$LD_LIBRARY_PATH" && nvcc --version && nvidia-smi
#        export CPATH="/usr/include/python3.10:${CPATH}"
#        export CPATH="/home/docker/actions-runner/_work/_tool/Python/3.10.13/x64:${CPATH}"
#        ls /usr/include/python3.10
#        ls /home/docker/actions-runner/_work/_tool/Python/3.10.13/x64

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -e pyadic
        pip install -e syngular
        pip install -e lips
        pip install -e linac[full]
        pip install -e antares

    - name: Test with pytest
      run: |
        cd antares
        pytest |& tee coverage.txt
        PYTEST_EXIT_CODE=${PIPESTATUS[0]}
        if [ "$PYTEST_EXIT_CODE" -ne 0 ]; then
          echo "pytest failed with exit code $PYTEST_EXIT_CODE"
          exit 1
        else
          echo "pytest passed with exit code 0"
        fi

    - name: Run update-badges script
      if: matrix.os == 'self-hosted' && matrix.python-version == '3.9'
      run: |
        cd antares
        python update-badges.py

    - name: Update badges and commit README.md
      if: matrix.os == 'self-hosted' && matrix.python-version == '3.9'
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        file_pattern: README.md
        repository: antares
        commit_message: "Automatic badge update"
